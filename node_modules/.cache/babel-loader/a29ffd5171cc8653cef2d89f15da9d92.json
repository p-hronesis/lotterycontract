{"ast":null,"code":"import _regeneratorRuntime from\"D:/PROJECTS/LOTTERY_GAME/lotterygame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/PROJECTS/LOTTERY_GAME/lotterygame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/PROJECTS/LOTTERY_GAME/lotterygame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import Menu from'./components/Menu';import{Header}from'./components/Header';import RecentWinners from'./components/RecentWinners';import HowItWorks from'./components/HowItWorks';import Faqs from'./components/Faqs';import Web3 from'web3';import abi from\"./abi/lottery.json\";import{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var INFURA_ENDPOINT=\"https://rinkeby.infura.io/v3/c95d9276d5e041acbe6411cdda48275e\";function App(){var LotteryContractAddress='0x65fd425aD3f20835662A9447677A7df40055EF68';var _useState=useState([]),_useState2=_slicedToArray(_useState,2),recentWinners=_useState2[0],setrecentWinners=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isConnected=_useState4[0],setisConnected=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),accounts=_useState6[0],setAccounts=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),lotteryContract=_useState8[0],setlotteryContract=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),web3=_useState10[0],setWeb3=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),lotteryState=_useState12[0],setlotteryState=_useState12[1];useEffect(function(){var web3_temp=new Web3(INFURA_ENDPOINT);setWeb3(web3_temp);var lotteryContract=new web3_temp.eth.Contract(abi,LotteryContractAddress);setlotteryContract(lotteryContract);connectMetaMask();detectMetaMaskAccountChange();getRecentWinners(lotteryContract);getLotteryState(lotteryContract);},[]);function detectMetaMaskAccountChange(){return _detectMetaMaskAccountChange.apply(this,arguments);}function _detectMetaMaskAccountChange(){_detectMetaMaskAccountChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:window.ethereum.on(\"accountsChanged\",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var web3;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log('you changed the currently selected account');web3=new Web3(Web3.givenProvider);web3.eth.getAccounts().then(function(response){setAccounts(response);if(!response[0]){console.log('no account is connected');setisConnected(false);}});case 3:case\"end\":return _context4.stop();}}},_callee4);})));case 1:case\"end\":return _context5.stop();}}},_callee5);}));return _detectMetaMaskAccountChange.apply(this,arguments);}function getRecentWinners(lotteryContract){lotteryContract.methods.lottery_count().call().then(function(lotteryCount){var recentWinnerstemp=[];var countTemp=lotteryCount;var maxLotterycount=5;// for (var maxLotterycount = 3; (lotteryCount > 0) && (maxLotterycount > 0); maxLotterycount--) {\nwhile(lotteryCount>0&&maxLotterycount>0){lotteryContract.methods.recentWinners(lotteryCount).call().then(function(response){recentWinnerstemp.push(response);countTemp--;maxLotterycount--;if(countTemp==0||maxLotterycount==0){console.log('Recent winners retrieved succesfully: '+maxLotterycount+\"|\");// console.log()\nsetrecentWinners(recentWinnerstemp);}},function(error){console.log(error);alert('There was an error retrieving recent winners');});console.log(\"current value: \"+(lotteryCount>0)&&maxLotterycount>0);lotteryCount--;}},function(error){console.log(error);});}function getLotteryState(lotteryContract){lotteryContract.methods.lottery_state().call().then(function(response){switch(response){case'0':setlotteryState(\"Ended/Not Started\");break;case'1':setlotteryState(\"Ongoing\");break;case'2':setlotteryState(\"Calculating winner, please wait\");break;case'3':setlotteryState(\"Processing...\");break;default:setlotteryState(\"Unknown!\");break;}},function(error){console.log(error);});}function endLottery(){setlotteryState(\"Processing...\");var web3=new Web3(INFURA_ENDPOINT);var lotteryContract=new web3.eth.Contract(abi,LotteryContractAddress);var lotteryOwnerAddress=\"0x281B3B65AE71fc4EBBa61325a6bC2974B80F04c2\";var lotteryContractOwner=web3.eth.accounts.privateKeyToAccount('0x65cde2fe2e5f7c84d33f6e1b25585ff2469b5704d43e1c18a72b5b6978aef57a');web3.eth.getTransactionCount(lotteryOwnerAddress,/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(err,txCount){var txObject,signedTx;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:txObject={nonce:txCount,to:LotteryContractAddress,gasLimit:300000,gasPrice:web3.utils.toHex(web3.utils.toWei('10','gwei')),chainId:4,data:lotteryContract.methods.endLottery().encodeABI()};_context.next=3;return web3.eth.accounts.signTransaction(txObject,lotteryContractOwner.privateKey);case 3:signedTx=_context.sent;console.log('attempting to send signed transaction');web3.eth.sendSignedTransaction(signedTx.rawTransaction,function(error,hash){if(!error){console.log(\"üéâ The hash of your transaction is: \",hash,\"\\n Check Infura's Mempool to view the status of your transaction!\");}else{console.log(\"‚ùóSomething went wrong while submitting your transaction:\",error);}}).then(function(response){setlotteryState(\"Ended/Not Started\");console.log('this is the transaction receipt');console.log(response);getLotteryState(lotteryContract);},function(error){console.log('this is the transaction error receipt');getLotteryState(lotteryContract);console.log(error);});case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());}function startLottery(){setlotteryState(\"Processing...\");var web3=new Web3(INFURA_ENDPOINT);var lotteryContract=new web3.eth.Contract(abi,LotteryContractAddress);var lotteryOwnerAddress=\"0x281B3B65AE71fc4EBBa61325a6bC2974B80F04c2\";var lotteryContractOwner=web3.eth.accounts.privateKeyToAccount('0x65cde2fe2e5f7c84d33f6e1b25585ff2469b5704d43e1c18a72b5b6978aef57a');web3.eth.getTransactionCount(lotteryOwnerAddress,/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err,txCount){var txObject,signedTx;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:txObject={nonce:txCount,to:LotteryContractAddress,gasLimit:300000,gasPrice:web3.utils.toHex(web3.utils.toWei('10','gwei')),chainId:4,data:lotteryContract.methods.startLottery().encodeABI()};_context2.next=3;return web3.eth.accounts.signTransaction(txObject,lotteryContractOwner.privateKey);case 3:signedTx=_context2.sent;console.log('attempting to send signed transaction');web3.eth.sendSignedTransaction(signedTx.rawTransaction,function(error,hash){if(!error){console.log(\"üéâ The hash of your transaction is: \",hash,\"\\n Check Infura's Mempool to view the status of your transaction!\");}else{console.log(\"‚ùóSomething went wrong while submitting your transaction:\",error);}}).then(function(response){setlotteryState(\"Ongoing\");console.log('this is the transaction receipt');console.log(response);getLotteryState(lotteryContract);},function(error){console.log('this is the transaction error receipt');console.log(error);getLotteryState(lotteryContract);});case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}());}function enterLottery(){if(lotteryState!=\"Ongoing\"){var cannotEnterLottery=\"Cannot enter lottery when it's \"+lotteryState+\" Please \"+(lotteryState==\"Ended/Not Started\"?\"Click the blue start lottery button to start the lottery\":\"wait a little for the previouse winner to be selected and then start a new lottery session\");alert(cannotEnterLottery);// console.log(cannotEnterLottery)\nreturn;}var web3=new Web3(Web3.givenProvider);var lotteryContract=new web3.eth.Contract(abi,LotteryContractAddress);lotteryContract.methods.entranceFeeInWei().call().then(function(response){lotteryContract.methods.enter().send({from:accounts[0],value:response*1.05}).then(function(response){console.log('Entered lottery succesfully');},function(errorii){console.log('An error occured while attempting to enter lottery');console.log(errorii);});},function(error){console.log('error retrieving the entrance fee in wei'+error);});}var connectMetaMask=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(\"attempting to connect metamask\");if(!window.ethereum){_context3.next=10;break;}_context3.prev=2;Web3.givenProvider.send('eth_requestAccounts').then(function(response){setAccounts(response.result);setisConnected(true);return true;});_context3.next=10;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](2);console.log('There was an error connecting to metamask');return _context3.abrupt(\"return\",false);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[2,6]]);}));return function connectMetaMask(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Menu,{id:\"Home\"}),/*#__PURE__*/_jsx(Header,{account:accounts[0],endLottery:endLottery,startLottery:startLottery,enterLottery:enterLottery,connectMetaMask:connectMetaMask,isConnected:isConnected,lotteryState:lotteryState}),/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(RecentWinners,{recentWinners:recentWinners})}),/*#__PURE__*/_jsx(HowItWorks,{}),/*#__PURE__*/_jsx(Faqs,{})]});}export default App;","map":{"version":3,"sources":["D:/PROJECTS/lottery_game/lotterygame/src/App.js"],"names":["Menu","Header","RecentWinners","HowItWorks","Faqs","Web3","abi","useEffect","useState","INFURA_ENDPOINT","App","LotteryContractAddress","recentWinners","setrecentWinners","isConnected","setisConnected","accounts","setAccounts","lotteryContract","setlotteryContract","web3","setWeb3","lotteryState","setlotteryState","web3_temp","eth","Contract","connectMetaMask","detectMetaMaskAccountChange","getRecentWinners","getLotteryState","window","ethereum","on","console","log","givenProvider","getAccounts","then","response","methods","lottery_count","call","lotteryCount","recentWinnerstemp","countTemp","maxLotterycount","push","error","alert","lottery_state","endLottery","lotteryOwnerAddress","lotteryContractOwner","privateKeyToAccount","getTransactionCount","err","txCount","txObject","nonce","to","gasLimit","gasPrice","utils","toHex","toWei","chainId","data","encodeABI","signTransaction","privateKey","signedTx","sendSignedTransaction","rawTransaction","hash","startLottery","enterLottery","cannotEnterLottery","entranceFeeInWei","enter","send","from","value","errorii","result"],"mappings":"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","sourcesContent":["import './App.css';\nimport Menu from './components/Menu';\nimport { Header } from './components/Header';\nimport RecentWinners from './components/RecentWinners';\nimport HowItWorks from './components/HowItWorks';\nimport Faqs from './components/Faqs';\nimport Web3 from 'web3';\nimport abi from \"./abi/lottery.json\"\nimport { useEffect, useState } from 'react';\nconst INFURA_ENDPOINT = \"https://rinkeby.infura.io/v3/c95d9276d5e041acbe6411cdda48275e\"\nfunction App() {\n\n  const LotteryContractAddress = '0x65fd425aD3f20835662A9447677A7df40055EF68'\n  const [recentWinners, setrecentWinners] = useState([]);\n  const [isConnected, setisConnected] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [lotteryContract, setlotteryContract] = useState();\n  const [web3, setWeb3] = useState()\n  const [lotteryState, setlotteryState] = useState()\n\n  useEffect(() => {\n    const web3_temp = new Web3(INFURA_ENDPOINT)\n    setWeb3(web3_temp)\n    const lotteryContract = new web3_temp.eth.Contract(abi, LotteryContractAddress)\n    setlotteryContract(lotteryContract)\n    connectMetaMask()\n    detectMetaMaskAccountChange();\n    getRecentWinners(lotteryContract)\n    getLotteryState(lotteryContract)\n  }, []);\n\n  async function detectMetaMaskAccountChange() {\n    window.ethereum.on(\"accountsChanged\", async function () {\n      console.log('you changed the currently selected account')\n      const web3 = new Web3(Web3.givenProvider);\n      web3.eth.getAccounts().then(\n        (response) => {\n          setAccounts(response)\n          if (!response[0]) {\n            console.log('no account is connected')\n            setisConnected(false)\n          }\n        }\n      )\n\n    });\n  }\n\n  function getRecentWinners(lotteryContract) {\n    lotteryContract.methods.lottery_count().call().then((lotteryCount) => {\n      const recentWinnerstemp = []\n      var countTemp = lotteryCount\n      var maxLotterycount = 5;\n      // for (var maxLotterycount = 3; (lotteryCount > 0) && (maxLotterycount > 0); maxLotterycount--) {\n      while ((lotteryCount > 0) && (maxLotterycount > 0)) {\n        lotteryContract.methods.recentWinners(lotteryCount).call().then((response) => {\n          recentWinnerstemp.push(response)\n          countTemp--\n          maxLotterycount--\n          if (countTemp == 0 || maxLotterycount == 0) {\n            console.log('Recent winners retrieved succesfully: ' + maxLotterycount + \"|\")\n            // console.log()\n            setrecentWinners(recentWinnerstemp)\n          }\n        }, (error) => {\n          console.log(error)\n          alert('There was an error retrieving recent winners')\n        })\n        console.log(\"current value: \" + (lotteryCount > 0) && (maxLotterycount > 0))\n        lotteryCount--\n      }\n\n    }, (error) => {\n      console.log(error)\n    })\n  }\n  function getLotteryState(lotteryContract) {\n    lotteryContract.methods.lottery_state().call().then((response) => {\n\n      switch (response) {\n        case '0':\n          setlotteryState(\"Ended/Not Started\")\n          break;\n        case '1':\n          setlotteryState(\"Ongoing\")\n          break;\n        case '2':\n          setlotteryState(\"Calculating winner, please wait\")\n          break;\n        case '3':\n          setlotteryState(\"Processing...\")\n          break;\n        default:\n          setlotteryState(\"Unknown!\")\n          break;\n      }\n    }, (error) => {\n      console.log(error)\n    })\n  }\n\n  function endLottery() {\n\n    setlotteryState(\"Processing...\")\n    const web3 = new Web3(INFURA_ENDPOINT);\n    const lotteryContract = new web3.eth.Contract(abi, LotteryContractAddress);\n    const lotteryOwnerAddress = \"0x281B3B65AE71fc4EBBa61325a6bC2974B80F04c2\"\n    var lotteryContractOwner = web3.eth.accounts.privateKeyToAccount('0x65cde2fe2e5f7c84d33f6e1b25585ff2469b5704d43e1c18a72b5b6978aef57a');\n\n    web3.eth.getTransactionCount(lotteryOwnerAddress, async (err, txCount) => {\n      const txObject = {\n        nonce: txCount,\n        to: LotteryContractAddress,\n        gasLimit: 300000,\n        gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\n        chainId: 4,\n        data: lotteryContract.methods.endLottery().encodeABI()\n      }\n\n      const signedTx = await web3.eth.accounts.signTransaction(txObject, lotteryContractOwner.privateKey);\n\n      console.log('attempting to send signed transaction')\n      web3.eth.sendSignedTransaction(signedTx.rawTransaction, function (error, hash) {\n        if (!error) {\n          console.log(\"üéâ The hash of your transaction is: \", hash, \"\\n Check Infura's Mempool to view the status of your transaction!\");\n        } else {\n          console.log(\"‚ùóSomething went wrong while submitting your transaction:\", error)\n        }\n      }).then((response) => {\n        setlotteryState(\"Ended/Not Started\")\n        console.log('this is the transaction receipt')\n        console.log(response)\n        getLotteryState(lotteryContract)\n      },\n        (error) => {\n          console.log('this is the transaction error receipt')\n          getLotteryState(lotteryContract)\n          console.log(error)\n        }\n      )\n    })\n\n  }\n\n  function startLottery() {\n    setlotteryState(\"Processing...\")\n    const web3 = new Web3(INFURA_ENDPOINT);\n    const lotteryContract = new web3.eth.Contract(abi, LotteryContractAddress);\n    const lotteryOwnerAddress = \"0x281B3B65AE71fc4EBBa61325a6bC2974B80F04c2\"\n    var lotteryContractOwner = web3.eth.accounts.privateKeyToAccount('0x65cde2fe2e5f7c84d33f6e1b25585ff2469b5704d43e1c18a72b5b6978aef57a');\n\n    web3.eth.getTransactionCount(lotteryOwnerAddress, async (err, txCount) => {\n      const txObject = {\n        nonce: txCount,\n        to: LotteryContractAddress,\n        gasLimit: 300000,\n        gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\n        chainId: 4,\n        data: lotteryContract.methods.startLottery().encodeABI()\n      }\n\n      const signedTx = await web3.eth.accounts.signTransaction(txObject, lotteryContractOwner.privateKey);\n\n      console.log('attempting to send signed transaction')\n      web3.eth.sendSignedTransaction(signedTx.rawTransaction, function (error, hash) {\n        if (!error) {\n          console.log(\"üéâ The hash of your transaction is: \", hash, \"\\n Check Infura's Mempool to view the status of your transaction!\");\n\n        } else {\n          console.log(\"‚ùóSomething went wrong while submitting your transaction:\", error)\n        }\n      }).then((response) => {\n        setlotteryState(\"Ongoing\")\n        console.log('this is the transaction receipt')\n        console.log(response)\n        getLotteryState(lotteryContract)\n\n      },\n        (error) => {\n          console.log('this is the transaction error receipt')\n          console.log(error)\n          getLotteryState(lotteryContract)\n\n        }\n      )\n    })\n  }\n\n  function enterLottery() {\n    if (lotteryState != \"Ongoing\") {\n      const cannotEnterLottery = (\"Cannot enter lottery when it's \" + lotteryState + \" Please \") + ((lotteryState == \"Ended/Not Started\") ? \"Click the blue start lottery button to start the lottery\" : \"wait a little for the previouse winner to be selected and then start a new lottery session\")\n      alert(cannotEnterLottery)\n      // console.log(cannotEnterLottery)\n      return;\n    }\n    const web3 = new Web3(Web3.givenProvider);\n    const lotteryContract = new web3.eth.Contract(abi, LotteryContractAddress);\n    lotteryContract.methods.entranceFeeInWei().call().then((response) => {\n      lotteryContract.methods.enter().send({ from: accounts[0], value: response * 1.05 }).then(\n        (response) => {\n          console.log('Entered lottery succesfully')\n        },\n        (errorii) => {\n          console.log('An error occured while attempting to enter lottery')\n          console.log(errorii)\n        }\n      )\n    },\n      (error) => {\n        console.log('error retrieving the entrance fee in wei' + error)\n      })\n\n  }\n\n  const connectMetaMask = async () => {\n    console.log(\"attempting to connect metamask\")\n    if (window.ethereum) {\n      try {\n        Web3.givenProvider.send('eth_requestAccounts')\n          .then((response) => {\n            setAccounts(response.result)\n            setisConnected(true)\n            return true;\n          });\n      } catch (error) {\n        console.log('There was an error connecting to metamask')\n        return false;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Menu id={\"Home\"} />\n      <Header account={accounts[0]} endLottery={endLottery} startLottery={startLottery} enterLottery={enterLottery} connectMetaMask={connectMetaMask} isConnected={isConnected} lotteryState={lotteryState} />\n      <table>\n        <RecentWinners recentWinners={recentWinners} />\n      </table>\n      <HowItWorks />\n      <Faqs />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}