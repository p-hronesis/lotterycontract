{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\lottery_game\\\\lotterygame\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport './App.css';\nimport Menu from './components/Menu';\nimport { Header } from './components/Header';\nimport RecentWinners from './components/RecentWinners';\nimport Web3 from 'web3';\nimport abi from \"./abi/lottery.json\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INFURA_ENDPOINT = \"https://rinkeby.infura.io/v3/c95d9276d5e041acbe6411cdda48275e\";\n\nfunction App() {\n  _s();\n\n  const LotteryContractAddress = '0x65fd425aD3f20835662A9447677A7df40055EF68';\n  const [recentWinners, setrecentWinners] = useState([]);\n  const [isConnected, setisConnected] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [lotteryContract, setlotteryContract] = useState();\n  const [web3, setWeb3] = useState();\n  const [lotteryState, setlotteryState] = useState();\n  useEffect(() => {\n    const web3_temp = new Web3(INFURA_ENDPOINT);\n    setWeb3(web3_temp);\n    const lotteryContract = new web3_temp.eth.Contract(abi, LotteryContractAddress);\n    setlotteryContract(lotteryContract);\n    detectMetaMaskAccountChange();\n    getRecentWinners(lotteryContract);\n    getLotteryState(lotteryContract);\n  }, []);\n\n  async function detectMetaMaskAccountChange() {\n    window.ethereum.on(\"accountsChanged\", async function () {\n      console.log('you changed the currently selected account'); // Time to reload your interface with accounts[0]!\n\n      setAccounts(await Web3.eth.getAccounts()); // accounts = await web3.eth.getAccounts();\n\n      console.log(accounts);\n    });\n  }\n\n  function getRecentWinners(lotteryContract) {\n    lotteryContract.methods.lottery_count().call().then(lotteryCount => {\n      console.log('Lottery Count: ' + lotteryCount);\n      const recentWinnerstemp = [];\n      var countTemp = lotteryCount;\n\n      while (lotteryCount > 0) {\n        lotteryContract.methods.recentWinners(lotteryCount).call().then(response => {\n          // console.log(response)\n          recentWinnerstemp.push(response);\n          countTemp--;\n\n          if (countTemp == 0) {\n            // console.log(\"pppppppppp\")\n            console.log('Recent winners retrieved succesfully'); // setisConnected(connectMetaMask())\n\n            setrecentWinners(recentWinnerstemp); // console.log(recentWinners)\n          } else {\n            console.log(\"wwwwwwwwwwwwwww\");\n          }\n        }, error => {\n          console.log(error);\n        });\n        lotteryCount--;\n      }\n    }, error => {\n      console.log(error);\n      console.log(\"hhhhhhh\");\n    });\n  } // useEffect(() => {\n  //   if (Web3.givenProvider) {\n  //     const web3 = new Web3(Web3.givenProvider);\n  //     web3.eth.getAccounts().then(setAccounts);\n  //     setisConnected(true)\n  //   }\n  // }, [])\n\n\n  function getLotteryState(lotteryContract) {\n    lotteryContract.methods.lottery_state().call().then(response => {\n      console.log('attempting to get lottery contract state');\n      console.log(response);\n      console.log('attempting to get lottery contract state');\n\n      switch (response) {\n        case '0':\n          setlotteryState(\"Ended/Not Started\");\n          break;\n\n        case '1':\n          setlotteryState(\"Ongoing\");\n          break;\n\n        case '2':\n          setlotteryState(\"Calculating winner, please wait\");\n          break;\n\n        default:\n          setlotteryState(\"Unknown!\");\n          break;\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  function endLottery() {\n    // lotteryContract.methods.endLottery().call().then((response) => {\n    //   console.log(response)\n    // },\n    //   (error) => {\n    //     console.log(error)\n    //   })\n    console.log('Attempting to end lottery');\n  }\n\n  function startLottery() {\n    // lotteryContract.methods.startLottery().call().then((response) => {\n    //   console.log(response)\n    // },\n    //   (error) => {\n    //     console.log(error)\n    //   })\n    console.log('Attempting to start lottery');\n  }\n\n  function enterLottery() {\n    console.log('attempting to enter lottery'); // console.log(isConnected)\n\n    const web3 = new Web3(Web3.givenProvider);\n    const lotteryContract = new web3.eth.Contract(abi, LotteryContractAddress);\n    lotteryContract.methods.entranceFeeInWei().call().then(response => {\n      console.log(response);\n      console.log(accounts);\n      lotteryContract.methods.enter().send({\n        from: accounts[0],\n        value: response * 1.05\n      }).then(response => {\n        console.log('Entered lottery succesfully');\n        console.log(response);\n      }, errorii => {\n        console.log('An error occured while attempting to enter lottery');\n        console.log(errorii);\n      });\n    }, error => {\n      console.log('error retrieving the entrance fee in wei' + error);\n    });\n  }\n\n  const connectMetaMask = async () => {\n    console.log(\"attempting to connect metamask\");\n\n    if (window.ethereum) {\n      try {\n        Web3.givenProvider.send('eth_requestAccounts').then(response => {\n          setAccounts(response.result);\n          console.log('There was no error connecting to metamask');\n          setisConnected(true);\n          return true;\n        });\n      } catch (error) {\n        console.log('There was an error connecting to metamask');\n        return false;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      id: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      endLottery: endLottery,\n      startLottery: startLottery,\n      enterLottery: enterLottery,\n      connectMetaMask: connectMetaMask,\n      isConnected: isConnected,\n      lotteryState: lotteryState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(RecentWinners, {\n        recentWinners: recentWinners\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yV8gWzEWmye5C2mrSKouk4eEYAo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/PROJECTS/lottery_game/lotterygame/src/App.js"],"names":["Menu","Header","RecentWinners","Web3","abi","useEffect","useState","INFURA_ENDPOINT","App","LotteryContractAddress","recentWinners","setrecentWinners","isConnected","setisConnected","accounts","setAccounts","lotteryContract","setlotteryContract","web3","setWeb3","lotteryState","setlotteryState","web3_temp","eth","Contract","detectMetaMaskAccountChange","getRecentWinners","getLotteryState","window","ethereum","on","console","log","getAccounts","methods","lottery_count","call","then","lotteryCount","recentWinnerstemp","countTemp","response","push","error","lottery_state","endLottery","startLottery","enterLottery","givenProvider","entranceFeeInWei","enter","send","from","value","errorii","connectMetaMask","result"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Menu from './components/Menu';\nimport { Header } from './components/Header';\nimport RecentWinners from './components/RecentWinners';\nimport Web3 from 'web3';\nimport abi from \"./abi/lottery.json\"\nimport { useEffect, useState } from 'react';\nconst INFURA_ENDPOINT = \"https://rinkeby.infura.io/v3/c95d9276d5e041acbe6411cdda48275e\"\nfunction App() {\n\n  const LotteryContractAddress = '0x65fd425aD3f20835662A9447677A7df40055EF68'\n  const [recentWinners, setrecentWinners] = useState([]);\n  const [isConnected, setisConnected] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [lotteryContract, setlotteryContract] = useState();\n  const [web3, setWeb3] = useState()\n  const [lotteryState, setlotteryState] = useState()\n\n  useEffect(() => {\n    const web3_temp = new Web3(INFURA_ENDPOINT)\n    setWeb3(web3_temp)\n    const lotteryContract = new web3_temp.eth.Contract(abi, LotteryContractAddress)\n    setlotteryContract(lotteryContract)\n\n    detectMetaMaskAccountChange();\n    getRecentWinners(lotteryContract)\n    getLotteryState(lotteryContract)\n  }, []);\n\n  async function detectMetaMaskAccountChange() {\n    window.ethereum.on(\"accountsChanged\", async function () {\n      console.log('you changed the currently selected account')\n      // Time to reload your interface with accounts[0]!\n      setAccounts(await Web3.eth.getAccounts())\n      // accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n    });\n  }\n\n  function getRecentWinners(lotteryContract) {\n    lotteryContract.methods.lottery_count().call().then((lotteryCount) => {\n      console.log('Lottery Count: ' + lotteryCount)\n      const recentWinnerstemp = []\n      var countTemp = lotteryCount\n      while (lotteryCount > 0) {\n        lotteryContract.methods.recentWinners(lotteryCount).call().then((response) => {\n          // console.log(response)\n          recentWinnerstemp.push(response)\n          countTemp--\n          if (countTemp == 0) {\n            // console.log(\"pppppppppp\")\n            console.log('Recent winners retrieved succesfully')\n            // setisConnected(connectMetaMask())\n            setrecentWinners(recentWinnerstemp)\n            // console.log(recentWinners)\n\n          } else {\n            console.log(\"wwwwwwwwwwwwwww\")\n\n          }\n        }, (error) => {\n          console.log(error)\n        })\n\n        lotteryCount--\n      }\n\n    }, (error) => {\n      console.log(error)\n      console.log(\"hhhhhhh\")\n    })\n  }\n\n  // useEffect(() => {\n  //   if (Web3.givenProvider) {\n  //     const web3 = new Web3(Web3.givenProvider);\n  //     web3.eth.getAccounts().then(setAccounts);\n  //     setisConnected(true)\n  //   }\n  // }, [])\n  function getLotteryState(lotteryContract) {\n    lotteryContract.methods.lottery_state().call().then((response) => {\n      console.log('attempting to get lottery contract state')\n      console.log(response)\n      console.log('attempting to get lottery contract state')\n\n      switch (response) {\n        case '0':\n          setlotteryState(\"Ended/Not Started\")\n          break;\n        case '1':\n          setlotteryState(\"Ongoing\")\n          break;\n        case '2':\n          setlotteryState(\"Calculating winner, please wait\")\n          break;\n        default:\n          setlotteryState(\"Unknown!\")\n          break;\n      }\n    }, (error) => {\n      console.log(error)\n    })\n  }\n  function endLottery() {\n    // lotteryContract.methods.endLottery().call().then((response) => {\n    //   console.log(response)\n    // },\n    //   (error) => {\n    //     console.log(error)\n    //   })\n    console.log('Attempting to end lottery')\n  }\n\n  function startLottery() {\n    // lotteryContract.methods.startLottery().call().then((response) => {\n    //   console.log(response)\n    // },\n    //   (error) => {\n    //     console.log(error)\n    //   })\n    console.log('Attempting to start lottery')\n  }\n\n  function enterLottery() {\n    console.log('attempting to enter lottery')\n    // console.log(isConnected)\n    const web3 = new Web3(Web3.givenProvider);\n    const lotteryContract = new web3.eth.Contract(abi, LotteryContractAddress);\n    lotteryContract.methods.entranceFeeInWei().call().then((response) => {\n      console.log(response)\n      console.log(accounts)\n      lotteryContract.methods.enter().send({ from: accounts[0], value: response * 1.05 }).then(\n        (response) => {\n          console.log('Entered lottery succesfully')\n          console.log(response)\n        },\n        (errorii) => {\n          console.log('An error occured while attempting to enter lottery')\n          console.log(errorii)\n        }\n      )\n    },\n      (error) => {\n        console.log('error retrieving the entrance fee in wei' + error)\n      })\n\n  }\n\n  const connectMetaMask = async () => {\n    console.log(\"attempting to connect metamask\")\n    if (window.ethereum) {\n      try {\n        Web3.givenProvider.send('eth_requestAccounts')\n          .then((response) => {\n            setAccounts(response.result)\n            console.log('There was no error connecting to metamask')\n            setisConnected(true)\n            return true;\n          });\n      } catch (error) {\n        console.log('There was an error connecting to metamask')\n        return false;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Menu id={\"Home\"} />\n      <Header endLottery={endLottery} startLottery={startLottery} enterLottery={enterLottery} connectMetaMask={connectMetaMask} isConnected={isConnected} lotteryState={lotteryState} />\n      <table>\n        <RecentWinners recentWinners={recentWinners} />\n      </table>\n\n      {/* <div className=\"App\">\n        <header className=\"App-header\">\n          <Menu />\n        </header>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}