{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\lottery_game\\\\lotterygame\\\\src\\\\components\\\\HowItWorks.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HowItWorks(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"how-it-works\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"how-it-works-heading\",\n      children: \" How it Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"paragraph\",\n      children: \"Easylottery is a completely decentralized lottery application where you can enter lottery with a particular amount of ether and then stand a chance to win 100% of the total amount invested into the lottery session. The Lottery system is divided into 3 states namely Closed state, Open state, Calculating winner state.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lottery-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Closed State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"In the closed state, users cannot enter lottery.  This state signifies that the lottery has ended and needs to be started again. After this state is the open state.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lottery-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Open State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"In the open state, users can enter lottery with a minimum amount. To enter the lottery user most first specify an amount that they want to enter with before entry. This amount specified by user can be as high as the user possible - the  higher the amount, the higher your chances of winning. The lottery will remain open until a certain specified condition is met. After this state is the calculating winner state.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lottery-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Calculating \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this), \" Winner:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"In the calculating winner state the lottery app generates a random number and uses this random number to select a random winner. New entry into the lottery app is also not allowed in these state.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n}\n\n_c = HowItWorks;\nexport default HowItWorks;\n\nvar _c;\n\n$RefreshReg$(_c, \"HowItWorks\");","map":{"version":3,"sources":["D:/PROJECTS/lottery_game/lotterygame/src/components/HowItWorks.js"],"names":["HowItWorks","props"],"mappings":";;;AACA,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACvB,sBACI;AAAK,IAAA,SAAS,EAAE,cAAhB;AAAA,4BACI;AAAG,MAAA,SAAS,EAAE,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAE,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAgBI;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eA4BI;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAA,8BACI;AAAA,gDACgB;AAAA;AAAA;AAAA;AAAA,gBADhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;;KA3CQD,U;AA6CT,eAAeA,UAAf","sourcesContent":["\r\nfunction HowItWorks(props) {\r\n    return (\r\n        <div className={\"how-it-works\"} >\r\n            <p className={\"how-it-works-heading\"}> How it Works</p>\r\n            <p className={\"paragraph\"}>Easylottery is a completely decentralized lottery application where you can enter lottery with a particular\r\n                amount of ether and then stand a chance to win 100% of the total amount invested into the lottery session.\r\n                The Lottery system is divided into 3 states namely Closed state, Open state, Calculating winner state.\r\n            </p>\r\n            <div className={\"lottery-state\"}>\r\n                <p>\r\n                    Closed State:\r\n                </p>\r\n                <p>\r\n                    In the closed state, users cannot enter lottery.  This state signifies that\r\n                    the lottery has ended and needs to be started again. After this state is\r\n                    the open state.\r\n                </p>\r\n            </div>\r\n            <div className={\"lottery-state\"}>\r\n                <p>\r\n                    Open State:\r\n                </p>\r\n                <p>\r\n                    In the open state, users can enter lottery with a minimum amount. To enter\r\n                    the lottery user most first specify an amount that they want to enter with before entry.\r\n                    This amount specified by user can be as high as the user possible - the  higher the amount,\r\n                    the higher your chances of winning. The lottery will remain open until a certain specified\r\n                    condition is met. After this state is the calculating winner state.\r\n                </p>\r\n            </div>\r\n            <div className={\"lottery-state\"}>\r\n                <p>\r\n                    Calculating <br /> Winner:\r\n                </p>\r\n                <p>\r\n                    In the calculating winner state the lottery app generates a random number and uses\r\n                    this random number to select a random winner. New entry into the lottery app is also\r\n                    not allowed in these state.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HowItWorks;"]},"metadata":{},"sourceType":"module"}