{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\lottery_game\\\\lotterygame\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport './App.css';\nimport Menu from './components/Menu';\nimport { Header } from './components/Header';\nimport RecentWinners from './components/RecentWinners';\nimport Web3 from 'web3';\nimport abi from \"./abi/lottery.json\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INFURA_ENDPOINT = \"https://rinkeby.infura.io/v3/c95d9276d5e041acbe6411cdda48275e\";\nconst LOTTERY_CONTRACT_ADDREESS = \"0x65fd425aD3f20835662A9447677A7df40055EF68\";\n\nfunction App() {\n  _s();\n\n  const LotteryContractAddress = '0x65fd425aD3f20835662A9447677A7df40055EF68';\n  const [recentWinners, setrecentWinners] = useState([]);\n  const [isConnected, setisConnected] = useState(false); // const [lotteryContract, setlotteryContract] = useState();\n\n  const [accounts, setAccounts] = useState([]);\n  useEffect(() => {\n    const web3 = new Web3(INFURA_ENDPOINT);\n    const lotteryContract = new web3.eth.Contract(abi, LotteryContractAddress); // setlotteryContract(lotteryContract)\n\n    console.log('attempting to retrieve recent winners');\n    lotteryContract.methods.lottery_count().call().then(lotteryCount => {\n      console.log('Lottery Count: ' + lotteryCount);\n      const recentWinnerstemp = [];\n      var countTemp = lotteryCount;\n\n      while (lotteryCount > 0) {\n        lotteryContract.methods.recentWinners(lotteryCount).call().then(response => {\n          // console.log(response)\n          recentWinnerstemp.push(response);\n          countTemp--;\n\n          if (countTemp == 0) {\n            // console.log(\"pppppppppp\")\n            console.log('Recent winners retrieved succesfully'); // setisConnected(connectMetaMask())\n\n            setrecentWinners(recentWinnerstemp); // console.log(recentWinners)\n          } else {\n            console.log(\"wwwwwwwwwwwwwww\");\n          }\n        }, error => {\n          console.log(error);\n        });\n        lotteryCount--;\n      }\n    }, error => {\n      console.log(error);\n      console.log(\"hhhhhhh\");\n    });\n  }, []);\n  useEffect(() => {\n    if (Web3.givenProvider) {\n      const web3 = new Web3(Web3.givenProvider);\n      web3.eth.getAccounts().then(setAccounts); // setisConnected(true)\n    }\n  }, []);\n\n  function enterLottery() {\n    console.log('attempting to enter lottery'); // console.log(isConnected)\n\n    const web3 = new Web3(Web3.givenProvider);\n    const lotteryContract = new web3.eth.Contract(abi, LotteryContractAddress);\n    lotteryContract.methods.entranceFeeInWei().call().then(response => {\n      console.log(response);\n      console.log(accounts);\n      lotteryContract.methods.enter().send({\n        from: accounts[0],\n        value: response * 1.1\n      }).then(response => {\n        console.log('Entered lottery succesfully');\n        console.log(response);\n      }, errorii => {\n        console.log('An error occured while attempting to enter lottery');\n        console.log(errorii);\n      });\n    }, error => {\n      console.log('error retrieving the entrance fee in wei' + error);\n    });\n  }\n\n  const connectMetaMask = async () => {\n    console.log(\"attempting to connect metamask\");\n\n    if (window.ethereum) {\n      try {\n        Web3.givenProvider.send('eth_requestAccounts').then(response => {\n          setAccounts(response.result);\n          console.log('There was no error connecting to metamask');\n          setisConnected(true);\n          return true;\n        });\n      } catch (error) {\n        console.log('There was an error connecting to metamask');\n        return false;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      id: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      enterLottery: enterLottery,\n      connectMetaMask: connectMetaMask,\n      isConnected: isConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(RecentWinners, {\n        recentWinners: recentWinners\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rYmZBtjrwvO1q4wzV9eCF6+1J4s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/PROJECTS/lottery_game/lotterygame/src/App.js"],"names":["Menu","Header","RecentWinners","Web3","abi","useEffect","useState","INFURA_ENDPOINT","LOTTERY_CONTRACT_ADDREESS","App","LotteryContractAddress","recentWinners","setrecentWinners","isConnected","setisConnected","accounts","setAccounts","web3","lotteryContract","eth","Contract","console","log","methods","lottery_count","call","then","lotteryCount","recentWinnerstemp","countTemp","response","push","error","givenProvider","getAccounts","enterLottery","entranceFeeInWei","enter","send","from","value","errorii","connectMetaMask","window","ethereum","result"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Menu from './components/Menu';\nimport { Header } from './components/Header';\nimport RecentWinners from './components/RecentWinners';\nimport Web3 from 'web3';\nimport abi from \"./abi/lottery.json\"\nimport { useEffect, useState } from 'react';\nconst INFURA_ENDPOINT = \"https://rinkeby.infura.io/v3/c95d9276d5e041acbe6411cdda48275e\"\nconst LOTTERY_CONTRACT_ADDREESS = \"0x65fd425aD3f20835662A9447677A7df40055EF68\"\nfunction App() {\n\n  const LotteryContractAddress = '0x65fd425aD3f20835662A9447677A7df40055EF68'\n  const [recentWinners, setrecentWinners] = useState([]);\n  const [isConnected, setisConnected] = useState(false);\n  // const [lotteryContract, setlotteryContract] = useState();\n  const [accounts, setAccounts] = useState([]);\n\n\n  useEffect(() => {\n    const web3 = new Web3(INFURA_ENDPOINT)\n    const lotteryContract = new web3.eth.Contract(abi, LotteryContractAddress)\n    // setlotteryContract(lotteryContract)\n    console.log('attempting to retrieve recent winners')\n    lotteryContract.methods.lottery_count().call().then((lotteryCount) => {\n      console.log('Lottery Count: ' + lotteryCount)\n      const recentWinnerstemp = []\n      var countTemp = lotteryCount\n      while (lotteryCount > 0) {\n        lotteryContract.methods.recentWinners(lotteryCount).call().then((response) => {\n          // console.log(response)\n          recentWinnerstemp.push(response)\n          countTemp--\n          if (countTemp == 0) {\n            // console.log(\"pppppppppp\")\n            console.log('Recent winners retrieved succesfully')\n            // setisConnected(connectMetaMask())\n            setrecentWinners(recentWinnerstemp)\n            // console.log(recentWinners)\n\n          } else {\n            console.log(\"wwwwwwwwwwwwwww\")\n\n          }\n        }, (error) => {\n          console.log(error)\n        })\n\n        lotteryCount--\n      }\n\n    }, (error) => {\n      console.log(error)\n      console.log(\"hhhhhhh\")\n    })\n  }, []);\n\n  useEffect(() => {\n    if (Web3.givenProvider) {\n      const web3 = new Web3(Web3.givenProvider);\n\n      web3.eth.getAccounts().then(setAccounts);\n      // setisConnected(true)\n    }\n  }, [])\n\n\n\n  function enterLottery() {\n    console.log('attempting to enter lottery')\n    // console.log(isConnected)\n    const web3 = new Web3(Web3.givenProvider);\n    const lotteryContract = new web3.eth.Contract(abi, LotteryContractAddress);\n    lotteryContract.methods.entranceFeeInWei().call().then((response) => {\n      console.log(response)\n      console.log(accounts)\n      lotteryContract.methods.enter().send({ from: accounts[0], value: response * 1.1 }).then(\n        (response) => {\n          console.log('Entered lottery succesfully')\n          console.log(response)\n        },\n        (errorii) => {\n          console.log('An error occured while attempting to enter lottery')\n          console.log(errorii)\n        }\n      )\n    },\n      (error) => {\n        console.log('error retrieving the entrance fee in wei' + error)\n      })\n\n  }\n\n  const connectMetaMask = async () => {\n    console.log(\"attempting to connect metamask\")\n    if (window.ethereum) {\n      try {\n        Web3.givenProvider.send('eth_requestAccounts')\n          .then((response) => {\n            setAccounts(response.result)\n            console.log('There was no error connecting to metamask')\n            setisConnected(true)\n            return true;\n          });\n      } catch (error) {\n        console.log('There was an error connecting to metamask')\n        return false;\n      }\n    }\n  }\n\n\n\n\n\n\n  return (\n    <div>\n      <Menu id={\"Home\"} />\n      <Header enterLottery={enterLottery} connectMetaMask={connectMetaMask} isConnected={isConnected} />\n      <table>\n        <RecentWinners recentWinners={recentWinners} />\n      </table>\n\n      {/* <div className=\"App\">\n        <header className=\"App-header\">\n          <Menu />\n        </header>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}